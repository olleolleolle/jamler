# OASIS_START
# DO NOT EDIT (digest: f301e476372132e30c38a3ca60b27a1c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library pa_jlib
"src/pa_jlib.cmxs": use_pa_jlib
# Library pa_sql
"src/pa_sql.cmxs": use_pa_sql
# Executable jamler
"src/main.native": oasis_executable_jamler_cclib
"src/libjamler_stubs.lib": oasis_executable_jamler_cclib
"src/dlljamler_stubs.dll": oasis_executable_jamler_cclib
"src/libjamler_stubs.a": oasis_executable_jamler_cclib
"src/dlljamler_stubs.so": oasis_executable_jamler_cclib
"src/main.native": oasis_executable_jamler_native
<src/*.ml{,i}>: oasis_executable_jamler_native
"src/idnawrap.c": oasis_executable_jamler_native
"src/expatwrap.c": oasis_executable_jamler_native
"src/stringprepwrap.c": oasis_executable_jamler_native
"src/main.native": use_libjamler_stubs
"src/main.native": pkg_camlp4.quotations.o
"src/main.native": pkg_cryptokit
"src/main.native": pkg_lwt
"src/main.native": pkg_lwt.lib
"src/main.native": pkg_lwt.syntax
"src/main.native": pkg_lwt.syntax.log
"src/main.native": pkg_lwt.unix
"src/main.native": pkg_lwt_ssl
"src/main.native": pkg_pgocaml
"src/main.native": pkg_threads
"src/main.native": pkg_yojson
"src/main.native": use_pa_jlib
"src/main.native": use_pa_sql
<src/*.ml{,i}>: pkg_camlp4.quotations.o
<src/*.ml{,i}>: pkg_lwt
<src/*.ml{,i}>: pkg_lwt.lib
<src/*.ml{,i}>: pkg_lwt.syntax
<src/*.ml{,i}>: pkg_lwt.syntax.log
<src/*.ml{,i}>: pkg_lwt.unix
<src/*.ml{,i}>: pkg_lwt_ssl
<src/*.ml{,i}>: pkg_pgocaml
<src/*.ml{,i}>: pkg_threads
<src/*.ml{,i}>: pkg_yojson
<src/*.ml{,i}>: use_pa_jlib
<src/*.ml{,i}>: use_pa_sql
"src/idnawrap.c": pkg_camlp4.quotations.o
"src/idnawrap.c": pkg_lwt
"src/idnawrap.c": pkg_lwt.lib
"src/idnawrap.c": pkg_lwt.syntax
"src/idnawrap.c": pkg_lwt.syntax.log
"src/idnawrap.c": pkg_lwt.unix
"src/idnawrap.c": pkg_lwt_ssl
"src/idnawrap.c": pkg_pgocaml
"src/idnawrap.c": pkg_threads
"src/idnawrap.c": pkg_yojson
"src/idnawrap.c": use_pa_jlib
"src/idnawrap.c": use_pa_sql
"src/expatwrap.c": pkg_camlp4.quotations.o
"src/expatwrap.c": pkg_lwt
"src/expatwrap.c": pkg_lwt.lib
"src/expatwrap.c": pkg_lwt.syntax
"src/expatwrap.c": pkg_lwt.syntax.log
"src/expatwrap.c": pkg_lwt.unix
"src/expatwrap.c": pkg_lwt_ssl
"src/expatwrap.c": pkg_pgocaml
"src/expatwrap.c": pkg_threads
"src/expatwrap.c": pkg_yojson
"src/expatwrap.c": use_pa_jlib
"src/expatwrap.c": use_pa_sql
"src/stringprepwrap.c": pkg_camlp4.quotations.o
"src/stringprepwrap.c": pkg_lwt
"src/stringprepwrap.c": pkg_lwt.lib
"src/stringprepwrap.c": pkg_lwt.syntax
"src/stringprepwrap.c": pkg_lwt.syntax.log
"src/stringprepwrap.c": pkg_lwt.unix
"src/stringprepwrap.c": pkg_lwt_ssl
"src/stringprepwrap.c": pkg_pgocaml
"src/stringprepwrap.c": pkg_threads
"src/stringprepwrap.c": pkg_yojson
"src/stringprepwrap.c": use_pa_jlib
"src/stringprepwrap.c": use_pa_sql
# Executable test
"src/test.native": oasis_executable_test_cclib
"src/libtest_stubs.lib": oasis_executable_test_cclib
"src/dlltest_stubs.dll": oasis_executable_test_cclib
"src/libtest_stubs.a": oasis_executable_test_cclib
"src/dlltest_stubs.so": oasis_executable_test_cclib
"src/test.native": oasis_executable_test_byte
<src/*.ml{,i}>: oasis_executable_test_byte
"src/idnawrap.c": oasis_executable_test_byte
"src/expatwrap.c": oasis_executable_test_byte
"src/stringprepwrap.c": oasis_executable_test_byte
"src/test.native": use_libtest_stubs
"src/test.native": pkg_cryptokit
"src/test.native": pkg_oUnit
<src/*.ml{,i}>: pkg_cryptokit
<src/*.ml{,i}>: pkg_oUnit
"src/idnawrap.c": pkg_cryptokit
"src/idnawrap.c": pkg_oUnit
"src/expatwrap.c": pkg_cryptokit
"src/expatwrap.c": pkg_oUnit
"src/stringprepwrap.c": pkg_cryptokit
"src/stringprepwrap.c": pkg_oUnit
# OASIS_STOP
<src/*.ml{,i}>: syntax_camlp4o, pkg_camlp4
<src/*.ml{,i}>: pa_jlib, pa_sql
<src/pa_jlib.ml>: -pa_jlib, -pa_sql
<src/pa_sql.ml>: -pa_jlib, -pa_sql
